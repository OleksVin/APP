// ===== üìÅ database/DatabaseHelper.java =====
package com.autoparts.ua.database;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class DatabaseHelper extends SQLiteOpenHelper {
    private static final String DATABASE_NAME = "autoparts.db";
    private static final int DATABASE_VERSION = 1;

    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
        createTables(db);
        // –ù–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –¥–∞–Ω–∏–º–∏
        insertInitialData(db);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS parts");
        db.execSQL("DROP TABLE IF EXISTS vehicles");
        onCreate(db);
    }

    private void createTables(SQLiteDatabase db) {
        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ vehicles
        db.execSQL("CREATE TABLE vehicles (" +
                "id INTEGER PRIMARY KEY AUTOINCREMENT," +
                "make TEXT NOT NULL," +
                "model TEXT NOT NULL," +
                "year_start INTEGER NOT NULL," +
                "year_end INTEGER NOT NULL," +
                "generation TEXT NOT NULL," +
                "body_type TEXT NOT NULL," +
                "engine_type TEXT NOT NULL," +
                "parts_count INTEGER NOT NULL DEFAULT 0" +
                ")");

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ parts
        db.execSQL("CREATE TABLE parts (" +
                "id INTEGER PRIMARY KEY AUTOINCREMENT," +
                "vehicle_id INTEGER NOT NULL," +
                "name TEXT NOT NULL," +
                "category TEXT NOT NULL," +
                "part_number TEXT," +
                "description TEXT," +
                "specifications TEXT," +
                "replacement_interval TEXT," +
                "is_consumable INTEGER NOT NULL DEFAULT 0," +
                "image_url TEXT," +
                "FOREIGN KEY (vehicle_id) REFERENCES vehicles (id) ON DELETE CASCADE" +
                ")");

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤
        db.execSQL("CREATE INDEX idx_vehicles_make ON vehicles(make)");
        db.execSQL("CREATE INDEX idx_vehicles_model ON vehicles(model)");
        db.execSQL("CREATE INDEX idx_vehicles_make_model ON vehicles(make, model)");
        db.execSQL("CREATE INDEX idx_parts_vehicle_id ON parts(vehicle_id)");
        db.execSQL("CREATE INDEX idx_parts_category ON parts(category)");
        db.execSQL("CREATE INDEX idx_parts_vehicle_category ON parts(vehicle_id, category)");
    }

    private void insertInitialData(SQLiteDatabase db) {
        // –í—Å—Ç–∞–≤–∫–∞ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤
        insertVehicles(db);
        // –í—Å—Ç–∞–≤–∫–∞ –∑–∞–ø—á–∞—Å—Ç–∏–Ω
        insertParts(db);
        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫—ñ–≤
        updatePartsCounts(db);
    }

    private void insertVehicles(SQLiteDatabase db) {
        // –ù—ñ–º–µ—Ü—å–∫—ñ –º–∞—Ä–∫–∏
        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('BMW', '3 Series', 2005, 2012, 'E90/E91/E92', 'Sedan/Wagon/Coupe', '2.0i, 3.0i, 2.0d', 142)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('BMW', '5 Series', 2003, 2010, 'E60/E61', 'Sedan/Wagon', '2.5i, 3.0i, 3.0d', 156)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('BMW', 'X5', 2006, 2013, 'E70', 'SUV', '3.0i, 4.8i, 3.0d', 134)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Mercedes-Benz', 'C-Class', 2007, 2014, 'W204', 'Sedan/Wagon', '1.8, 2.5, 3.0, 2.2d', 148)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Mercedes-Benz', 'E-Class', 2002, 2009, 'W211', 'Sedan/Wagon', '2.6, 3.2, 5.0, 3.2d', 162)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Audi', 'A4', 2008, 2016, 'B8', 'Sedan/Wagon', '1.8T, 2.0T, 3.0, 2.0d', 145)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Audi', 'A6', 2004, 2011, 'C6', 'Sedan/Wagon', '2.4, 3.2, 4.2, 3.0d', 158)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Volkswagen', 'Passat', 2005, 2015, 'B6/B7', 'Sedan/Wagon', '1.8T, 2.0T, 3.6, 2.0d', 128)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Volkswagen', 'Golf', 2008, 2013, 'Mk6', 'Hatchback', '1.4T, 1.6, 2.0T, 1.6d', 115)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Volkswagen', 'Tiguan', 2007, 2016, '5N', 'SUV', '1.4T, 2.0T, 2.0d', 108)");

        // –Ø–ø–æ–Ω—Å—å–∫—ñ –º–∞—Ä–∫–∏
        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Toyota', 'Camry', 2006, 2011, 'XV40', 'Sedan', '2.4, 3.5', 95)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Toyota', 'Corolla', 2006, 2013, 'E140/E150', 'Sedan/Hatchback', '1.4, 1.6, 1.8', 87)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Toyota', 'RAV4', 2005, 2012, 'XA30', 'SUV', '2.0, 2.4', 89)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Honda', 'Civic', 2005, 2011, '8th Gen', 'Sedan/Hatchback', '1.3, 1.8, 2.0', 92)");

        db.execSQL("INSERT INTO vehicles (make, model, year_start, year_end, generation, body_type, engine_type, parts_count) VALUES " +
                "('Honda', 'Accord', 2008, 2012, '8th Gen', 'Sedan', '2.0, 2.4, 3.5', 96)");

        // –î–æ–¥–∞–π—Ç–µ —Ä–µ—à—Ç—É –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –∑–∞ –∞–Ω–∞–ª–æ–≥—ñ—î—é...
        // –î–ª—è –µ–∫–æ–Ω–æ–º—ñ—ó –º—ñ—Å—Ü—è –ø–æ–∫–∞–∑—É—é –ª–∏—à–µ –ø–µ—Ä—à—ñ 15
    }

    private void insertParts(SQLiteDatabase db) {
        // –î–æ–¥–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è

        // –î–≤–∏–≥—É–Ω - –ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞', '–î–≤–∏–≥—É–Ω', 'ENG-OIL-001', '–°–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞', '5W-30, 4-6 –ª—ñ—Ç—Ä—ñ–≤', '10,000-15,000 –∫–º', 1, 'https://example.com/engine_oil.jpg')");
        }

        // –î–≤–∏–≥—É–Ω - –ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä', '–î–≤–∏–≥—É–Ω', 'ENG-AIR-001', '–§—ñ–ª—å—Ç—Ä –ø–æ–≤—ñ—Ç—Ä—è –¥–≤–∏–≥—É–Ω–∞', '–ü–∞–ø—ñ—Ä/—Å–∏–Ω—Ç–µ—Ç–∏–∫–∞', '15,000-20,000 –∫–º', 1, 'https://example.com/air_filter.jpg')");
        }

        // –î–≤–∏–≥—É–Ω - –ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä', '–î–≤–∏–≥—É–Ω', 'ENG-FUEL-001', '–§—ñ–ª—å—Ç—Ä –æ—á–∏—â–µ–Ω–Ω—è –ø–∞–ª–∏–≤–∞', '–î–ª—è –±–µ–Ω–∑–∏–Ω—É/–¥–∏–∑–µ–ª—é', '20,000-30,000 –∫–º', 1, 'https://example.com/fuel_filter.jpg')");
        }

        // –î–≤–∏–≥—É–Ω - –°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è', '–î–≤–∏–≥—É–Ω', 'ENG-SPARK-001', '–ó–∞–ø–∞–ª—é–≤–∞–ª—å–Ω—ñ —Å–≤—ñ—á–∫–∏', '–Ü—Ä–∏–¥—ñ—î–≤—ñ/–ø–ª–∞—Ç–∏–Ω–æ–≤—ñ', '30,000-60,000 –∫–º', 1, 'https://example.com/spark_plugs.jpg')");
        }

        // –ì–∞–ª—å–º–∞ - –ü–µ—Ä–µ–¥–Ω—ñ –∫–æ–ª–æ–¥–∫–∏
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ –ø–µ—Ä–µ–¥–Ω—ñ', '–ì–∞–ª—å–º–∞', 'BRK-PAD-F001', '–ü–µ—Ä–µ–¥–Ω—ñ –≥–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏', '–ö–µ—Ä–∞–º—ñ—á–Ω—ñ/–Ω–∞–ø—ñ–≤–º–µ—Ç–∞–ª—ñ—á–Ω—ñ', '30,000-50,000 –∫–º', 1, 'https://example.com/brake_pads_front.jpg')");
        }

        // –ì–∞–ª—å–º–∞ - –ó–∞–¥–Ω—ñ –∫–æ–ª–æ–¥–∫–∏
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ –∑–∞–¥–Ω—ñ', '–ì–∞–ª—å–º–∞', 'BRK-PAD-R001', '–ó–∞–¥–Ω—ñ –≥–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏', '–ö–µ—Ä–∞–º—ñ—á–Ω—ñ/–Ω–∞–ø—ñ–≤–º–µ—Ç–∞–ª—ñ—á–Ω—ñ', '40,000-60,000 –∫–º', 1, 'https://example.com/brake_pads_rear.jpg')");
        }

        // –ì–∞–ª—å–º–∞ - –ì–∞–ª—å–º—ñ–≤–Ω–∞ —Ä—ñ–¥–∏–Ω–∞
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–ì–∞–ª—å–º—ñ–≤–Ω–∞ —Ä—ñ–¥–∏–Ω–∞', '–ì–∞–ª—å–º–∞', 'BRK-FLUID-001', '–ì—ñ–¥—Ä–∞–≤–ª—ñ—á–Ω–∞ —Ä—ñ–¥–∏–Ω–∞ DOT4', 'DOT4/DOT5.1', '24 –º—ñ—Å—è—Ü—ñ', 1, 'https://example.com/brake_fluid.jpg')");
        }

        // –ï–ª–µ–∫—Ç—Ä–∏–∫–∞ - –ê–∫—É–º—É–ª—è—Ç–æ—Ä
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–ê–∫—É–º—É–ª—è—Ç–æ—Ä', '–ï–ª–µ–∫—Ç—Ä–∏–∫–∞', 'ELC-BAT-001', '–°—Ç–∞—Ä—Ç–µ—Ä–Ω–∞ –±–∞—Ç–∞—Ä–µ—è', '12V 60-90Ah', '48-60 –º—ñ—Å—è—Ü—ñ–≤', 0, 'https://example.com/battery.jpg')");
        }

        // –ï–ª–µ–∫—Ç—Ä–∏–∫–∞ - –õ–∞–º–ø–∞ H7
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–õ–∞–º–ø–∞ H7', '–ï–ª–µ–∫—Ç—Ä–∏–∫–∞', 'ELC-H7-001', '–ì–∞–ª–æ–≥–µ–Ω–æ–≤–∞ –ª–∞–º–ø–∞ —Ñ–∞—Ä', 'H7 55W 12V', '12-24 –º—ñ—Å—è—Ü—ñ', 1, 'https://example.com/h7_bulb.jpg')");
        }

        // –ï–ª–µ–∫—Ç—Ä–∏–∫–∞ - –ó–∞–ø–æ–±—ñ–∂–Ω–∏–∫–∏
        for (int vehicleId = 1; vehicleId <= 15; vehicleId++) {
            db.execSQL("INSERT INTO parts (vehicle_id, name, category, part_number, description, specifications, replacement_interval, is_consumable, image_url) VALUES " +
                    "(" + vehicleId + ", '–ó–∞–ø–æ–±—ñ–∂–Ω–∏–∫–∏ –Ω–∞–±—ñ—Ä', '–ï–ª–µ–∫—Ç—Ä–∏–∫–∞', 'ELC-FUSE-001', '–ù–∞–±—ñ—Ä –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏—Ö –∑–∞–ø–æ–±—ñ–∂–Ω–∏–∫—ñ–≤', '5A-30A —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏', '–ó–∞ –ø–æ—Ç—Ä–µ–±–æ—é', 1, 'https://example.com/fuses_set.jpg')");
        }

        // –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–∞ –ø–æ—Ç—Ä–µ–±–æ—é...
    }

    private void updatePartsCounts(SQLiteDatabase db) {
        db.execSQL("UPDATE vehicles SET parts_count = (" +
                "SELECT COUNT(*) FROM parts WHERE parts.vehicle_id = vehicles.id" +
                ")");
    }
}