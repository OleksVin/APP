// ===== üìÅ database/AppDatabase.java (–û–°–¢–ê–¢–û–ß–ù–ê –í–ï–†–°–Ü–Ø) =====
package com.autoparts.ua.database;

import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;
import androidx.sqlite.db.SupportSQLiteDatabase;
import android.content.Context;
import android.os.AsyncTask;
import androidx.annotation.NonNull;
import java.util.List;

import com.autoparts.ua.database.entities.Vehicle;
import com.autoparts.ua.database.entities.Part;
import com.autoparts.ua.database.dao.VehicleDao;
import com.autoparts.ua.database.dao.PartDao;

@Database(entities = {Vehicle.class, Part.class}, version = 2, exportSchema = false) // ‚≠ê –í–µ—Ä—Å—ñ—è 2
public abstract class AppDatabase extends RoomDatabase {

    public abstract VehicleDao vehicleDao();
    public abstract PartDao partDao();

    private static volatile AppDatabase INSTANCE;

    public static AppDatabase getDatabase(final Context context) {
        if (INSTANCE == null) {
            synchronized (AppDatabase.class) {
                if (INSTANCE == null) {
                    INSTANCE = Room.databaseBuilder(context.getApplicationContext(),
                                    AppDatabase.class, "autoparts_database")
                            .fallbackToDestructiveMigration() // ‚≠ê –í–∏–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É –±–∞–∑—É
                            .addCallback(roomCallback)
                            .build();
                }
            }
        }
        return INSTANCE;
    }

    // Callback –¥–ª—è –Ω–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–∑–∏ –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ
    private static RoomDatabase.Callback roomCallback = new RoomDatabase.Callback() {
        @Override
        public void onCreate(@NonNull SupportSQLiteDatabase db) {
            super.onCreate(db);
            // –ù–∞–ø–æ–≤–Ω–∏—Ç–∏ –±–∞–∑—É –¥–∞–Ω–∏–º–∏ —É —Ñ–æ–Ω–æ–≤–æ–º—É –ø–æ—Ç–æ—Ü—ñ
            new PopulateDbAsync(INSTANCE).execute();
        }
    };

    // AsyncTask –¥–ª—è –Ω–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏–º–∏
    private static class PopulateDbAsync extends AsyncTask<Void, Void, Void> {
        private final VehicleDao vehicleDao;
        private final PartDao partDao;

        PopulateDbAsync(AppDatabase database) {
            vehicleDao = database.vehicleDao();
            partDao = database.partDao();
        }

        @Override
        protected Void doInBackground(Void... voids) {
            try {
                // –ù–∞–ø–æ–≤–Ω–∏—Ç–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è–º–∏ —Å–ø–æ—á–∞—Ç–∫—É
                populateVehicles();

                // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞
                Thread.sleep(1000);

                // –ü–æ—Ç—ñ–º –Ω–∞–ø–æ–≤–Ω–∏—Ç–∏ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∞–º–∏
                populateParts();

            } catch (Exception e) {
                e.printStackTrace();
            }

            return null;
        }

        private void populateVehicles() {
            try {
                // –ù—ñ–º–µ—Ü—å–∫—ñ –º–∞—Ä–∫–∏
                vehicleDao.insertVehicle(new Vehicle("BMW", "3 Series", 2005, 2012, "E90/E91/E92", "Sedan/Wagon/Coupe", "2.0i, 3.0i, 2.0d", 27));
                vehicleDao.insertVehicle(new Vehicle("BMW", "5 Series", 2003, 2010, "E60/E61", "Sedan/Wagon", "2.5i, 3.0i, 3.0d", 27));
                vehicleDao.insertVehicle(new Vehicle("BMW", "X5", 2006, 2013, "E70", "SUV", "3.0i, 4.8i, 3.0d", 27));
                vehicleDao.insertVehicle(new Vehicle("Mercedes-Benz", "C-Class", 2007, 2014, "W204", "Sedan/Wagon", "1.8, 2.5, 3.0, 2.2d", 27));
                vehicleDao.insertVehicle(new Vehicle("Mercedes-Benz", "E-Class", 2002, 2009, "W211", "Sedan/Wagon", "2.6, 3.2, 5.0, 3.2d", 27));
                vehicleDao.insertVehicle(new Vehicle("Audi", "A4", 2008, 2016, "B8", "Sedan/Wagon", "1.8T, 2.0T, 3.0, 2.0d", 27));
                vehicleDao.insertVehicle(new Vehicle("Audi", "A6", 2004, 2011, "C6", "Sedan/Wagon", "2.4, 3.2, 4.2, 3.0d", 27));
                vehicleDao.insertVehicle(new Vehicle("Volkswagen", "Passat", 2005, 2015, "B6/B7", "Sedan/Wagon", "1.8T, 2.0T, 3.6, 2.0d", 27));
                vehicleDao.insertVehicle(new Vehicle("Volkswagen", "Golf", 2008, 2013, "Mk6", "Hatchback", "1.4T, 1.6, 2.0T, 1.6d", 27));
                vehicleDao.insertVehicle(new Vehicle("Volkswagen", "Tiguan", 2007, 2016, "5N", "SUV", "1.4T, 2.0T, 2.0d", 27));

                // –Ø–ø–æ–Ω—Å—å–∫—ñ –º–∞—Ä–∫–∏
                vehicleDao.insertVehicle(new Vehicle("Toyota", "Camry", 2006, 2011, "XV40", "Sedan", "2.4, 3.5", 27));
                vehicleDao.insertVehicle(new Vehicle("Toyota", "Corolla", 2006, 2013, "E140/E150", "Sedan/Hatchback", "1.4, 1.6, 1.8", 27));
                vehicleDao.insertVehicle(new Vehicle("Toyota", "RAV4", 2005, 2012, "XA30", "SUV", "2.0, 2.4", 27));
                vehicleDao.insertVehicle(new Vehicle("Honda", "Civic", 2005, 2011, "8th Gen", "Sedan/Hatchback", "1.3, 1.8, 2.0", 27));
                vehicleDao.insertVehicle(new Vehicle("Honda", "Accord", 2008, 2012, "8th Gen", "Sedan", "2.0, 2.4, 3.5", 27));
                vehicleDao.insertVehicle(new Vehicle("Honda", "CR-V", 2006, 2012, "3rd Gen", "SUV", "2.0, 2.4", 27));
                vehicleDao.insertVehicle(new Vehicle("Mazda", "3", 2003, 2009, "BK/BL", "Hatchback/Sedan", "1.6, 2.0, 2.3", 27));
                vehicleDao.insertVehicle(new Vehicle("Mazda", "6", 2002, 2008, "GG/GY", "Sedan/Wagon", "1.8, 2.0, 2.3", 27));
                vehicleDao.insertVehicle(new Vehicle("Nissan", "X-Trail", 2007, 2014, "T31", "SUV", "2.0, 2.5, 2.0d", 27));
                vehicleDao.insertVehicle(new Vehicle("Nissan", "Qashqai", 2006, 2013, "J10", "SUV", "1.6, 2.0, 1.5d", 27));

                // –ê–º–µ—Ä–∏–∫–∞–Ω—Å—å–∫—ñ –º–∞—Ä–∫–∏
                vehicleDao.insertVehicle(new Vehicle("Ford", "Focus", 2004, 2011, "2nd Gen", "Hatchback/Sedan", "1.4, 1.6, 1.8, 2.0", 27));
                vehicleDao.insertVehicle(new Vehicle("Ford", "Mondeo", 2007, 2014, "Mk4", "Sedan/Wagon", "1.6, 2.0, 2.5, 2.0d", 27));
                vehicleDao.insertVehicle(new Vehicle("Ford", "Kuga", 2008, 2012, "1st Gen", "SUV", "2.5T, 2.0d", 27));
                vehicleDao.insertVehicle(new Vehicle("Chevrolet", "Cruze", 2008, 2016, "J300", "Sedan/Hatchback", "1.6, 1.8, 1.4T", 27));
                vehicleDao.insertVehicle(new Vehicle("Chevrolet", "Captiva", 2006, 2017, "C100/C140", "SUV", "2.4, 3.2, 2.0d", 27));

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        private void populateParts() {
            try {
                // –î–æ–¥–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è (vehicle_id 1-25)
                // –¢–µ–ø–µ—Ä ID –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≥–µ–Ω–µ—Ä—É—é—Ç—å—Å—è, —Ç–æ–º—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ vehicle_id –≤—ñ–¥ 1 –¥–æ 25
                for (int vehicleId = 1; vehicleId <= 25; vehicleId++) {

                    // –î–≤–∏–≥—É–Ω (6 –∑–∞–ø—á–∞—Å—Ç–∏–Ω)
                    partDao.insertPart(new Part(vehicleId, "–ú–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞", "–î–≤–∏–≥—É–Ω", "ENG-OIL-001",
                            "–°–∏–Ω—Ç–µ—Ç–∏—á–Ω–∞ –º–æ—Ç–æ—Ä–Ω–∞ –æ–ª–∏–≤–∞", "5W-30, 4-6 –ª—ñ—Ç—Ä—ñ–≤", "10,000-15,000 –∫–º", true,
                            "https://example.com/engine_oil.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", "–î–≤–∏–≥—É–Ω", "ENG-AIR-001",
                            "–§—ñ–ª—å—Ç—Ä –ø–æ–≤—ñ—Ç—Ä—è –¥–≤–∏–≥—É–Ω–∞", "–ü–∞–ø—ñ—Ä/—Å–∏–Ω—Ç–µ—Ç–∏–∫–∞", "15,000-20,000 –∫–º", true,
                            "https://example.com/air_filter.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", "–î–≤–∏–≥—É–Ω", "ENG-FUEL-001",
                            "–§—ñ–ª—å—Ç—Ä –æ—á–∏—â–µ–Ω–Ω—è –ø–∞–ª–∏–≤–∞", "–î–ª—è –±–µ–Ω–∑–∏–Ω—É/–¥–∏–∑–µ–ª—é", "20,000-30,000 –∫–º", true,
                            "https://example.com/fuel_filter.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è", "–î–≤–∏–≥—É–Ω", "ENG-SPARK-001",
                            "–ó–∞–ø–∞–ª—é–≤–∞–ª—å–Ω—ñ —Å–≤—ñ—á–∫–∏", "–Ü—Ä–∏–¥—ñ—î–≤—ñ/–ø–ª–∞—Ç–∏–Ω–æ–≤—ñ", "30,000-60,000 –∫–º", true,
                            "https://example.com/spark_plugs.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–†–µ–º—ñ–Ω—å –ì–†–ú", "–î–≤–∏–≥—É–Ω", "ENG-BELT-001",
                            "–†–µ–º—ñ–Ω—å –≥–∞–∑–æ—Ä–æ–∑–ø–æ–¥—ñ–ª—å–Ω–æ–≥–æ –º–µ—Ö–∞–Ω—ñ–∑–º—É", "–ì—É–º–æ–≤–∏–π –∑ –∫–æ—Ä–¥–æ–º", "60,000-100,000 –∫–º", true,
                            "https://example.com/timing_belt.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ê–Ω—Ç–∏—Ñ—Ä–∏–∑", "–î–≤–∏–≥—É–Ω", "ENG-COOL-001",
                            "–û—Ö–æ–ª–æ–¥–∂—É–≤–∞–ª—å–Ω–∞ —Ä—ñ–¥–∏–Ω–∞", "G12/G13, -40¬∞C", "40,000-60,000 –∫–º", true,
                            "https://example.com/antifreeze.jpg"));

                    // –ì–∞–ª—å–º–∞ (4 –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏)
                    partDao.insertPart(new Part(vehicleId, "–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ –ø–µ—Ä–µ–¥–Ω—ñ", "–ì–∞–ª—å–º–∞", "BRK-PAD-F001",
                            "–ü–µ—Ä–µ–¥–Ω—ñ –≥–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏", "–ö–µ—Ä–∞–º—ñ—á–Ω—ñ/–Ω–∞–ø—ñ–≤–º–µ—Ç–∞–ª—ñ—á–Ω—ñ", "30,000-50,000 –∫–º", true,
                            "https://example.com/brake_pads_front.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏ –∑–∞–¥–Ω—ñ", "–ì–∞–ª—å–º–∞", "BRK-PAD-R001",
                            "–ó–∞–¥–Ω—ñ –≥–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏", "–ö–µ—Ä–∞–º—ñ—á–Ω—ñ/–Ω–∞–ø—ñ–≤–º–µ—Ç–∞–ª—ñ—á–Ω—ñ", "40,000-60,000 –∫–º", true,
                            "https://example.com/brake_pads_rear.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ì–∞–ª—å–º—ñ–≤–Ω—ñ –¥–∏—Å–∫–∏ –ø–µ—Ä–µ–¥–Ω—ñ", "–ì–∞–ª—å–º–∞", "BRK-DISC-F001",
                            "–ü–µ—Ä–µ–¥–Ω—ñ –≥–∞–ª—å–º—ñ–≤–Ω—ñ –¥–∏—Å–∫–∏", "–í–µ–Ω—Ç–∏–ª—å–æ–≤–∞–Ω—ñ/—Å—É—Ü—ñ–ª—å–Ω—ñ", "60,000-80,000 –∫–º", false,
                            "https://example.com/brake_discs_front.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ì–∞–ª—å–º—ñ–≤–Ω–∞ —Ä—ñ–¥–∏–Ω–∞", "–ì–∞–ª—å–º–∞", "BRK-FLUID-001",
                            "–ì—ñ–¥—Ä–∞–≤–ª—ñ—á–Ω–∞ —Ä—ñ–¥–∏–Ω–∞ DOT4", "DOT4/DOT5.1", "24 –º—ñ—Å—è—Ü—ñ", true,
                            "https://example.com/brake_fluid.jpg"));

                    // –ï–ª–µ–∫—Ç—Ä–∏–∫–∞ (5 –∑–∞–ø—á–∞—Å—Ç–∏–Ω)
                    partDao.insertPart(new Part(vehicleId, "–ê–∫—É–º—É–ª—è—Ç–æ—Ä", "–ï–ª–µ–∫—Ç—Ä–∏–∫–∞", "ELC-BAT-001",
                            "–°—Ç–∞—Ä—Ç–µ—Ä–Ω–∞ –±–∞—Ç–∞—Ä–µ—è", "12V 60-90Ah", "48-60 –º—ñ—Å—è—Ü—ñ–≤", false,
                            "https://example.com/battery.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–õ–∞–º–ø–∞ H7", "–ï–ª–µ–∫—Ç—Ä–∏–∫–∞", "ELC-H7-001",
                            "–ì–∞–ª–æ–≥–µ–Ω–æ–≤–∞ –ª–∞–º–ø–∞ —Ñ–∞—Ä", "H7 55W 12V", "12-24 –º—ñ—Å—è—Ü—ñ", true,
                            "https://example.com/h7_bulb.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–õ–∞–º–ø–∞ H4", "–ï–ª–µ–∫—Ç—Ä–∏–∫–∞", "ELC-H4-001",
                            "–ì–∞–ª–æ–≥–µ–Ω–æ–≤–∞ –ª–∞–º–ø–∞ —Ñ–∞—Ä", "H4 60/55W 12V", "12-24 –º—ñ—Å—è—Ü—ñ", true,
                            "https://example.com/h4_bulb.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ó–∞–ø–æ–±—ñ–∂–Ω–∏–∫–∏ –Ω–∞–±—ñ—Ä", "–ï–ª–µ–∫—Ç—Ä–∏–∫–∞", "ELC-FUSE-001",
                            "–ù–∞–±—ñ—Ä –∞–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏—Ö –∑–∞–ø–æ–±—ñ–∂–Ω–∏–∫—ñ–≤", "5A-30A —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏", "–ó–∞ –ø–æ—Ç—Ä–µ–±–æ—é", true,
                            "https://example.com/fuses_set.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä", "–ï–ª–µ–∫—Ç—Ä–∏–∫–∞", "ELC-ALT-001",
                            "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–º—ñ–Ω–Ω–æ–≥–æ —Å—Ç—Ä—É–º—É", "80-150A", "100,000-150,000 –∫–º", false,
                            "https://example.com/alternator.jpg"));

                    // –ü—ñ–¥–≤—ñ—Å–∫–∞ (4 –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏)
                    partDao.insertPart(new Part(vehicleId, "–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–∏ –ø–µ—Ä–µ–¥–Ω—ñ", "–ü—ñ–¥–≤—ñ—Å–∫–∞", "SUS-SHOCK-F001",
                            "–ü–µ—Ä–µ–¥–Ω—ñ –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–∏", "–ì–∞–∑–æ–≤—ñ/–æ–ª—ñ–π–Ω—ñ", "60,000-80,000 –∫–º", false,
                            "https://example.com/shock_absorbers_front.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–∏ –∑–∞–¥–Ω—ñ", "–ü—ñ–¥–≤—ñ—Å–∫–∞", "SUS-SHOCK-R001",
                            "–ó–∞–¥–Ω—ñ –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–∏", "–ì–∞–∑–æ–≤—ñ/–æ–ª—ñ–π–Ω—ñ", "60,000-80,000 –∫–º", false,
                            "https://example.com/shock_absorbers_rear.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ü—Ä—É–∂–∏–Ω–∏ –ø–µ—Ä–µ–¥–Ω—ñ", "–ü—ñ–¥–≤—ñ—Å–∫–∞", "SUS-SPR-F001",
                            "–ü–µ—Ä–µ–¥–Ω—ñ —Å–ø—ñ—Ä–∞–ª—å–Ω—ñ –ø—Ä—É–∂–∏–Ω–∏", "–°—Ç–∞–ª–µ–≤—ñ –ø—Ä—É–∂–∏–Ω–∏", "100,000-150,000 –∫–º", false,
                            "https://example.com/springs_front.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–°–∞–π–ª–µ–Ω—Ç–±–ª–æ–∫–∏", "–ü—ñ–¥–≤—ñ—Å–∫–∞", "SUS-BUSH-001",
                            "–ì—É–º–æ–º–µ—Ç–∞–ª—ñ—á–Ω—ñ –≤—Ç—É–ª–∫–∏", "–ì—É–º–∞ –∑ –º–µ—Ç–∞–ª–æ–º", "50,000-80,000 –∫–º", false,
                            "https://example.com/bushings.jpg"));

                    // –ö–æ–Ω–¥–∏—Ü—ñ–æ–Ω–µ—Ä (2 –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏)
                    partDao.insertPart(new Part(vehicleId, "–§—ñ–ª—å—Ç—Ä —Å–∞–ª–æ–Ω—É", "–ö–æ–Ω–¥–∏—Ü—ñ–æ–Ω–µ—Ä", "AC-CABIN-001",
                            "–§—ñ–ª—å—Ç—Ä –æ—á–∏—â–µ–Ω–Ω—è –ø–æ–≤—ñ—Ç—Ä—è —Å–∞–ª–æ–Ω—É", "–ü–∞–ø–µ—Ä–æ–≤–∏–π/–≤—É–≥—ñ–ª—å–Ω–∏–π", "15,000-20,000 –∫–º", true,
                            "https://example.com/cabin_filter.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–§—Ä–µ–æ–Ω R134a", "–ö–æ–Ω–¥–∏—Ü—ñ–æ–Ω–µ—Ä", "AC-FREON-001",
                            "–•–ª–∞–¥–∞–≥–µ–Ω—Ç –¥–ª—è –∫–æ–Ω–¥–∏—Ü—ñ–æ–Ω–µ—Ä–∞", "R134a –µ–∫–æ–ª–æ–≥—ñ—á–Ω–∏–π", "24-36 –º—ñ—Å—è—Ü—ñ–≤", true,
                            "https://example.com/freon.jpg"));

                    // –ö—É–∑–æ–≤ (2 –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏)
                    partDao.insertPart(new Part(vehicleId, "–î–∑–µ—Ä–∫–∞–ª–æ –±–æ–∫–æ–≤–µ –ª—ñ–≤–µ", "–ö—É–∑–æ–≤", "BOD-MIR-L001",
                            "–õ—ñ–≤–µ –∑–æ–≤–Ω—ñ—à–Ω—î –¥–∑–µ—Ä–∫–∞–ª–æ", "–ó –ø—ñ–¥—ñ–≥—Ä—ñ–≤–æ–º/–±–µ–∑", "–ó–∞ –ø–æ—Ç—Ä–µ–±–æ—é", false,
                            "https://example.com/side_mirror_left.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–î–∑–µ—Ä–∫–∞–ª–æ –±–æ–∫–æ–≤–µ –ø—Ä–∞–≤–µ", "–ö—É–∑–æ–≤", "BOD-MIR-R001",
                            "–ü—Ä–∞–≤–µ –∑–æ–≤–Ω—ñ—à–Ω—î –¥–∑–µ—Ä–∫–∞–ª–æ", "–ó –ø—ñ–¥—ñ–≥—Ä—ñ–≤–æ–º/–±–µ–∑", "–ó–∞ –ø–æ—Ç—Ä–µ–±–æ—é", false,
                            "https://example.com/side_mirror_right.jpg"));

                    // –¢—Ä–∞–Ω—Å–º—ñ—Å—ñ—è (2 –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏)
                    partDao.insertPart(new Part(vehicleId, "–û–ª–∏–≤–∞ –ö–ü–ü", "–¢—Ä–∞–Ω—Å–º—ñ—Å—ñ—è", "TRN-OIL-001",
                            "–¢—Ä–∞–Ω—Å–º—ñ—Å—ñ–π–Ω–∞ –æ–ª–∏–≤–∞", "ATF/MTF —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏", "40,000-80,000 –∫–º", true,
                            "https://example.com/transmission_oil.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–ó—á–µ–ø–ª–µ–Ω–Ω—è –∫–æ–º–ø–ª–µ–∫—Ç", "–¢—Ä–∞–Ω—Å–º—ñ—Å—ñ—è", "TRN-CLUTCH-001",
                            "–ö–æ–º–ø–ª–µ–∫—Ç –∑—á–µ–ø–ª–µ–Ω–Ω—è", "–î–∏—Å–∫+–∫–æ—à–∏–∫+–ø—ñ–¥—à–∏–ø–Ω–∏–∫", "80,000-120,000 –∫–º", false,
                            "https://example.com/clutch_kit.jpg"));

                    // –í–∏—Ç—Ä–∞—Ç–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ (2 –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏)
                    partDao.insertPart(new Part(vehicleId, "–û–º–∏–≤–∞—á —Å–∫–ª–∞", "–í–∏—Ç—Ä–∞—Ç–Ω—ñ", "CON-WASH-001",
                            "–†—ñ–¥–∏–Ω–∞ –¥–ª—è –æ–º–∏–≤–∞–Ω–Ω—è —Å–∫–ª–∞", "–õ—ñ—Ç–Ω—è/–∑–∏–º–æ–≤–∞ -20¬∞C", "–ó–∞ –ø–æ—Ç—Ä–µ–±–æ—é", true,
                            "https://example.com/windshield_washer.jpg"));

                    partDao.insertPart(new Part(vehicleId, "–©—ñ—Ç–∫–∏ —Å–∫–ª–æ–æ—á–∏—Å–Ω–∏–∫–∞", "–í–∏—Ç—Ä–∞—Ç–Ω—ñ", "CON-WIPER-001",
                            "–ì—É–º–æ–≤—ñ —â—ñ—Ç–∫–∏ –¥–≤–æ—Ä–Ω–∏–∫—ñ–≤", "–†—ñ–∑–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ 450-650–º–º", "12-24 –º—ñ—Å—è—Ü—ñ", true,
                            "https://example.com/wiper_blades.jpg"));

                    // –ó–∞–≥–∞–ª–æ–º 27 –∑–∞–ø—á–∞—Å—Ç–∏–Ω –Ω–∞ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å

                    // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è–º–∏ –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                    if (vehicleId % 5 == 0) {
                        Thread.sleep(100);
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}